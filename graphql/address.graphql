enum LABEL_ADDRESS
{
	home
	Shipping
}

type Address 
{
	id: ID!
	user_id: User! @belongsTo(relation: "user")
	company_id: Company! @belongsTo(relation: "company")
	label: LABEL_ADDRESS!
	address: String!
	country: String!
	state: String!
	city: String!
	province: String!
	zip_code: String!
	created_at: Date!
	updated_at: Date!
}

input addressInput 
{
	id: ID @rules(apply: ["has:address"])
	company_id: ID @rules(apply: ["has:companies"])
	user_id: ID @rules(apply: ["auth"])
	label: LABEL_ADDRESS!
	address: String!
	city: String!
	state: String!
	province: String!
	country: String!
	zip_code: String!
}

extend type Query
{
	address(page: Int!): [Address!]! @paginateAuth(relation: "user" max: 10)
	addressCompany(id: ID! page: Int!): [Address!]! @hasManyThroughAuth(relation: "company" max: 10 column: "company_id")
}

extend type Mutation
{
  addressUpsert(input: addressInput! @lower @spread): Address! @upsert 
  addressDelete(id: ID! @rules(apply: ["has:address"]) @eq): Address @delete
}