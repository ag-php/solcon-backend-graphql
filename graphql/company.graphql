type Company 
{
  id: ID!
  user_id: User! @belongsTo(relation: "user")
  name: String!
  rif: String!
  fyc: Date!
  created_at: Date!
  updated_at: Date!
  accounts: [Account!]! @hasMany
  address: [Address!]! @hasMany
  emails: [Email!]! @hasMany
  phones: [Phone!]! @hasMany
  products: [Product!]! @hasMany
}

input companyUpsert
{
  id: ID @rules(apply: ["belongsToMe:companies"])
  name: String! @lower
  rif: String!
  fyc: Date!
}

# extend type Query
# {
#   company(id: ID! @rules(apply: ["belongsToMe:companies"]) @eq): Company! @find
#   # companies: [Company!]! @all @admin
# }

extend type Mutation
{
  companyUpsert(input: companyUpsert! @spread): Company! @upsert @inject(context: "user.id", name: "user_id") @guard(with: "api")
  companyDelete(id: ID! @rules(apply: ["belongsToMe:companies"]) @eq): Company @delete
}