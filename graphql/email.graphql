type Email 
{
	id: ID!
	user_id: User! @belongsTo(relation: "user")
	company_id: Company! @belongsTo(relation: "company")
	email: String!
	created_at: Date!
  updated_at: Date!
}

input emailInput
{
	id: ID @rules(apply: ["has:emails"])
	company_id: ID @rules(apply: ["has:companies"])
	user_id: ID @rules(apply: ["auth"])
	email: String!
}

extend type Query
{
	emails(page: Int!): [Email!]! @paginateAuth(relation: "user" max: 1)
	emailsCompany(id: ID! page: Int!): [Email!]! @hasManyThroughAuth(relation: "company" max: 10 column: "company_id")
}

extend type Mutation
{
  emailUpsert(input: emailInput! @lower @spread): Email! @upsert
  emailDelete(id: ID! @rules(apply: ["has:emails"]) @eq): Email @delete
}